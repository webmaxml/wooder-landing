@use '../functions/types' as *;
@use 'prop' as *;
@use '../functions/number';

// <<{ screen-height-section - constructs height values for section to be screen size

@mixin screen-height-section($bps) {
  $bps: validate($bps, 'map');

  @each $width, $heights in $bps {
    $width: validate($width, 'number');
    $heights: validate($heights, 'list');

    $width: number.to-px($width);
    $min-height: number.to-px(nth($heights, 1));
    $max-height: number.to-px(nth($heights, 2));

    @if $min-height == $max-height {
      @media only screen and (min-width: $width) { height: auto; }
    } @else {
      @media only screen and (min-width: $width) { min-height: $min-height; }
      @media only screen and (min-width: $width) and (max-height: $max-height) { height: 100vh; }
    }
  }
}

// }>>

// <<{ overlay - sets colored overlay on the element background

@mixin overlay($color, $opacity, $position: relative, $z: 0) {
  position: $position;
  z-index: $z;

  &::before {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    display: block; 

    content: '';
    width: 100%;
    height: 100%;

    background: rgba($color, $opacity);
  }
}

// }>>

// <<{ text-fade - sets pseudo-element which fades text in the bottom

@mixin text-fade($height, $color, $position: relative) {
  position: $position;

  &::after {
    position: absolute;
    left: 0;
    bottom: 0;
    z-index: 1;

    content: '';
    width: 100%;
    height: $height;

    background: linear-gradient(to bottom, transparent, $color);
  }
}

// }>>

